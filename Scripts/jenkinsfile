pipeline {
    agent any
    stages {
        stage ('checkout') {
            steps{
             checkout scm
            }
        }
        stage('Build') {    //maven build
            steps {
                echo 'Building..'
               sh 'mvn clean install'
                
            }
        }
        stage('Test') {
            steps {
            echo 'Testing..'
            }
        }
        stage('Deploy') {
            steps {
            echo 'Deploying....'
            }
        }
//upload to artifact
        /*stage ('upload') {
            steps{
                gitlabCommitStatus("upload") {
                    
                    def server = Artifactory.server "admin@10.147.17.23"
                    def buildInfo = Artifactory.newBuildInfo()
                    buildInfo.env.capture = true
                    buildInfo.env.collect()

                        def uploadSpec = """{
                        "files": [
                        {
                            "pattern": "**/target/*.jar",
                            "target": "libs-snapshot-local"
                        }, {
                            "pattern": "**/target/*.pom",
                            "target": "libs-snapshot-local"
                        }, {
                            "pattern": "**/target/*.war",
                            "target": "libs-snapshot-local"
                        }
                        ]
                    }"""
                    // Upload to Artifactory.
                    server.upload spec: uploadSpec, buildInfo: buildInfo

                    buildInfo.retention maxBuilds: 10, maxDays: 7, deleteBuildArtifacts: true
                    // Publish build info.
                    server.publishBuildInfo buildInfo
                }
            }
        */}
    }
}